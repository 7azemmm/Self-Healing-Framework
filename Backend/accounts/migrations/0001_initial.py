# Generated by Django 5.1.6 on 2025-04-13 22:10

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('execution_id', models.AutoField(primary_key=True, serialize=False)),
                ('execution_name', models.CharField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'execution',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealedElements',
            fields=[
                ('healed_element_id', models.AutoField(primary_key=True, serialize=False)),
                ('past_element_attribute', models.CharField(max_length=60)),
                ('new_element_attribute', models.CharField(max_length=60)),
                ('label', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='healed_elements', to='accounts.execution')),
            ],
            options={
                'verbose_name_plural': 'Healed Elements',
                'db_table': 'healed_elements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('metrics_id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_scenarios', models.IntegerField()),
                ('number_of_healed_elements', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='accounts.execution')),
            ],
            options={
                'verbose_name_plural': 'Metrics',
                'db_table': 'metrics',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'project',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExecutionFlow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_sequences', to='accounts.project')),
            ],
            options={
                'db_table': 'execution_sequence',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='execution',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='accounts.project'),
        ),
        migrations.CreateModel(
            name='Scenarios',
            fields=[
                ('scenario_id', models.AutoField(primary_key=True, serialize=False)),
                ('mapping_file', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to='accounts.project')),
            ],
            options={
                'verbose_name_plural': 'Scenarios',
                'db_table': 'scenarios',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExecutionFlowSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.PositiveIntegerField()),
                ('scenario_sequence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='accounts.executionflow')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_sequences', to='accounts.scenarios')),
            ],
            options={
                'db_table': 'execution_sequence_item',
                'ordering': ['sequence'],
                'unique_together': {('scenario_sequence', 'scenario')},
            },
        ),
    ]
